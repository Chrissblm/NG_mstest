{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://excel-custom-functions-js/./src/taskpane/taskpane.html","webpack://excel-custom-functions-js/./node_modules/html-loader/dist/runtime/getUrl.js","webpack://excel-custom-functions-js/webpack/bootstrap","webpack://excel-custom-functions-js/webpack/runtime/compat get default export","webpack://excel-custom-functions-js/webpack/runtime/define property getters","webpack://excel-custom-functions-js/webpack/runtime/global","webpack://excel-custom-functions-js/webpack/runtime/hasOwnProperty shorthand","webpack://excel-custom-functions-js/webpack/runtime/publicPath","webpack://excel-custom-functions-js/webpack/runtime/jsonp chunk loading","webpack://excel-custom-functions-js/./src/taskpane/taskpane.js"],"sourcesContent":["// Imports\nimport ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ from \"../../node_modules/html-loader/dist/runtime/getUrl.js\";\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"../../assets/nglogo-128.png\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_2___ = new URL(\"./taskpane.js\", import.meta.url);\n// Module\nvar ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);\nvar ___HTML_LOADER_REPLACEMENT_1___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_1___);\nvar ___HTML_LOADER_REPLACEMENT_2___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_2___);\nvar code = \" <!DOCTYPE html> <html lang=\\\"en\\\"> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>NextGen Procurement AI Add-in</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1.1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://static2.sharepointonline.com/files/fabric/office-ui-fabric-core/11.0.0/css/fabric.min.css\\\"/> <link href=\\\"https://fonts.googleapis.com/css?family=Open+Sans:300,400,700\\\" rel=\\\"stylesheet\\\"> <link href=\\\"\" + ___HTML_LOADER_REPLACEMENT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> </head> <body> <div id=\\\"sideload-msg\\\"></div> <div class=\\\"tabs ms-font-m ms-welcome ms-Fabric\\\"> <button class=\\\"tablink\\\" onclick='openTab(event,\\\"Tab1\\\")'>About</button> <button class=\\\"tablink\\\" onclick='openTab(event,\\\"Tab2\\\")'>API Key</button> <button class=\\\"tablink\\\" onclick='openTab(event,\\\"Tab3\\\")'>Chat AI</button> </div> <div id=\\\"Tab1\\\" class=\\\"tabcontent\\\"> <header class=\\\"ms-welcome__header ms-bgColor-neutralLighter\\\"> <img width=\\\"60\\\" height=\\\"60\\\" src=\\\"\" + ___HTML_LOADER_REPLACEMENT_1___ + \"\\\" alt=\\\"NextGen\\\" title=\\\"NextGen\\\"/> <h1 class=\\\"ms-font-su\\\">Next Gen Procurement AI for Excel</h1> </header> <main id=\\\"app-body\\\" class=\\\"ms-welcome__main\\\"> <p> <strong>To use the Add-in please follow the Steps Explained below:</strong> </p> <p>1. Register for Open AI account <a class=\\\"paragrapgh\\\" href=\\\"https://openai.com/api/\\\">Setup a ChatGPT API Account</a></p> <p>2. Create <a class=\\\"paragrapgh\\\" href=\\\"https://platform.openai.com/account/api-keys\\\">Create an API Key</a> and copy it to your clipboard</p> <p>3. Save the Copied API Key on the <a class=\\\"paragrapgh\\\" href=\\\"#\\\" onclick='event.preventDefault(),openTab(event,\\\"Tab2\\\")'>OpenAI Tab</a></p> </main> </div> <div id=\\\"Tab2\\\" class=\\\"tabcontent\\\"> <header id=\\\"app-body\\\" class=\\\"ms-welcome__main\\\"> <div style=\\\"width:100%\\\"> </div></header> <main id=\\\"app-body\\\" class=\\\"ms-welcome__main\\\"> <Strong> <p>OpenAI API Key</p> </Strong> <p> Configure an API key <a href=\\\"https://platform.openai.com/account/api-keys\\\">here </a> paste it below and click save </p> <input placeholder=\\\"API Key from Open AI\\\" id=\\\"key\\\" class=\\\"inputs\\\" required/> <br/> <br/> <button type=\\\"submit\\\" id=\\\"keysave\\\" class=\\\"btnsave\\\">Save</button> <p class=\\\"\\\" id=\\\"msgkey\\\"></p> </main></div> <br/>   <div id=\\\"Tab3\\\" class=\\\"tabcontent\\\"> <div class=\\\"container\\\"> <div class=\\\"chat-output\\\" id=\\\"chat-output\\\"></div> <div class=\\\"bottom-panel\\\"> <form class=\\\"input-form\\\"> <div class=\\\"input-wrapper\\\"> <div class=\\\"btn-wrapper\\\"> <button class=\\\"btn\\\"> <svg></svg> Regenerate response </button> </div> <div class=\\\"text-input-wrapper\\\"> <textarea id=\\\"prompt-textarea\\\"></textarea> <button class=\\\"send-btn\\\" disabled=\\\"\\\"> <span> <svg></svg> </span> </button> </div> </div> </form> <div class=\\\"footer-text\\\"> <span> ChatGPT may produce inaccurate information about people, places, or facts. <a href=\\\"https://help.openai.com/en/articles/6825453-chatgpt-release-notes\\\" target=\\\"_blank\\\" rel=\\\"noreferrer\\\"> ChatGPT May 24 Version </a> </span> </div> </div> </div> <div class=\\\"options-container\\\"> <div class=\\\"option\\\"> <label for=\\\"temperature\\\">Temperature:</label> <input type=\\\"range\\\" id=\\\"temperature-slider\\\" min=\\\"0\\\" max=\\\"2\\\" step=\\\"0.1\\\" value=\\\"0.6\\\"> <span id=\\\"temperature-output\\\">0.6</span> </div> <div class=\\\"option\\\"> <label for=\\\"model\\\">Model:</label> <select id=\\\"model-dropdown\\\"> <option value=\\\"gpt-3.5-turbo\\\">gpt-3.5-turbo</option> </select> </div> <div class=\\\"option\\\"> <label for=\\\"max-tokens\\\">Max Tokens:</label> <input type=\\\"range\\\" id=\\\"max-tokens-slider\\\" min=\\\"0\\\" max=\\\"4000\\\" step=\\\"1\\\" value=\\\"256\\\"> <span id=\\\"max-tokens-output\\\">256</span> </div> </div> </div> <\" + \"script type=\\\"module\\\" src=\\\"\" + ___HTML_LOADER_REPLACEMENT_2___ + \"\\\"><\" + \"/script> </body> </html> \";\n// Exports\nexport default code;","\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  }\n\n  if (!url) {\n    return url;\n  } // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n\n\n  url = String(url.__esModule ? url.default : url);\n\n  if (options.hash) {\n    // eslint-disable-next-line no-param-reassign\n    url += options.hash;\n  }\n\n  if (options.maybeNeedQuotes && /[\\t\\n\\f\\r \"'=<>`]/.test(url)) {\n    return \"\\\"\".concat(url, \"\\\"\");\n  }\n\n  return url;\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t41: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n * See LICENSE in the project root for license information.\r\n */\r\n\r\n/* global Office, document, console, Excel,  window, localStorage */\r\n\r\n// The initialize function must be run each time a new page is loaded\r\n\r\nOffice.onReady(() => {\r\n  if (document.getElementById(\"keysave\")) document.getElementById(\"keysave\").onclick = window.keySave;\r\n  if (document.getElementById(\"sideload-msg\")) document.getElementById(\"sideload-msg\").style.display = \"none\";\r\n\r\n  const saveButton = document.getElementById(\"keysave\");\r\n  const messageElement = document.getElementById(\"msgkey\");\r\n  console.log(\"Save button:\", saveButton); // Check if the button element is correctly selected\r\n  console.log(\"Message element:\", messageElement); // Check if the message element is correctly selected\r\n});\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n  document.getElementById(\"Tab3\").addEventListener(\"click\", function () {\r\n    document.getElementById(\"temperature-slider\").addEventListener(\"input\", function () {\r\n      document.getElementById(\"temperature-output\").innerText = this.value;\r\n    });\r\n\r\n    document.getElementById(\"max-tokens-slider\").addEventListener(\"input\", function () {\r\n      document.getElementById(\"max-tokens-output\").innerText = this.value;\r\n    });\r\n    document.getElementById(\"myButton\").addEventListener(\"click\", function () {\r\n      document.getElementById(\"chat-input\").focus();\r\n    });\r\n    document.getElementById(\"chat-input\").addEventListener(\"keydown\", function (event) {\r\n      if (event.key === \"Enter\") {\r\n        processUserInput();\r\n      }\r\n    });\r\n  });\r\n\r\n  // ChatGPT Function to handle user input and display chat messages\r\n  function processUserInput() {\r\n    var userInput = document.getElementById(\"chat-input\").value;\r\n    displayChatMessage(\"User: \" + userInput);\r\n    getChatGPTResponse(userInput)\r\n      .then(function (response) {\r\n        displayChatMessage(\"ChatGPT: \" + response);\r\n      })\r\n      .catch(function (error) {\r\n        console.error(\"Error: \" + error);\r\n      });\r\n    document.getElementById(\"chat-input\").value = \"\";\r\n  }\r\n\r\n  // Function to get the response from ChatGPT\r\n  function getChatGPTResponse(userInput) {\r\n    return new Promise(function (resolve, reject) {\r\n      var key = localStorage.getItem(\"apikey\");\r\n      if (key) {\r\n        var data = {\r\n          prompt: userInput,\r\n          temperature: document.getElementById(\"temperature-slider\").value,\r\n          model: document.getElementById(\"model-dropdown\").value,\r\n          max_tokens: document.getElementById(\"max-tokens-slider\").value,\r\n        };\r\n        var xhr = new XMLHttpRequest();\r\n        xhr.open(\"POST\", \"https://api.openai.com/v1/completions\", true);\r\n        xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + key);\r\n        xhr.onreadystatechange = function () {\r\n          if (xhr.readyState === XMLHttpRequest.DONE && xhr.status === 200) {\r\n            var response = JSON.parse(xhr.responseText);\r\n            resolve(response.choices[0].text.trim());\r\n          }\r\n        };\r\n\r\n        xhr.send(JSON.stringify(data));\r\n        xhr.onerror = function (event) {\r\n          reject(event.error);\r\n        };\r\n      } else {\r\n        reject(\"No API Key Found! You have not subscribed to the ChatGPT key yet!\");\r\n      }\r\n    });\r\n  }\r\n\r\n  // Function to display chat messages in the chat output\r\n  function displayChatMessage(message) {\r\n    var chatOutput = document.getElementById(\"chat-output\");\r\n    var messageNode = document.createElement(\"p\");\r\n    messageNode.textContent = message;\r\n    chatOutput.appendChild(messageNode);\r\n    chatOutput.scrollTop = chatOutput.scrollHeight;\r\n  }\r\n});\r\n\r\nwindow.openTab = function (evt, tabName) {\r\n  var i, tabcontent, tablinks;\r\n  // Hide all tab contents\r\n  tabcontent = document.getElementsByClassName(\"tabcontent\");\r\n  for (i = 0; i < tabcontent.length; i++) {\r\n    tabcontent[i].style.display = \"none\";\r\n  }\r\n  // Remove \"active\" class from tab links\r\n  tablinks = document.getElementsByClassName(\"tablink\");\r\n  for (i = 0; i < tablinks.length; i++) {\r\n    tablinks[i].className = tablinks[i].className.replace(\" active\", \"\");\r\n  }\r\n  // Show the selected tab content\r\n  document.getElementById(tabName).style.display = \"block\";\r\n  // Add \"active\" class to the clicked tab link\r\n  evt.currentTarget.className += \" active\";\r\n};\r\n// Set 'Tab1' as the default tab.\r\nwindow.onload = function () {\r\n  document.querySelector(\".tablink\").click();\r\n};\r\n\r\nwindow.keySave = function () {\r\n  try {\r\n    console.log(\"Save button clicked\"); // Log to console to confirm the event fired\r\n    var key = document.getElementById(\"key\").value; // Get the API key from the input field\r\n    localStorage.setItem(\"apikey\", key); // Save the API key to localStorage\r\n    console.log(localStorage.getItem(\"apikey\"));\r\n\r\n    var msgkeyElement = document.getElementById(\"msgkey\");\r\n    if (localStorage.getItem(\"apikey\") && localStorage.getItem(\"apikey\").trim() !== \"\") {\r\n      // API key is present and not empty\r\n      msgkeyElement.classList.add(\"alert-saved\"); // Add the CSS class for visual feedback\r\n      msgkeyElement.innerHTML = \"OPEN AI Key Saved\"; // Update the message text\r\n    } else {\r\n      msgkeyElement.classList.remove(\"alert-saved\"); // Remove the CSS class\r\n      msgkeyElement.innerHTML = \"\"; // Clear the message text\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n\r\nexport async function run() {\r\n  try {\r\n    await Excel.run(async (context) => {\r\n      //* Insert your Excel code here\r\n      // const range = context.workbook.getSelectedRange();\r\n      // Read the range address\r\n      // range.load(\"address\");\r\n      // Update the fill color\r\n      //  range.format.fill.color = \"yellow\";\r\n      await context.sync();\r\n      //  console.log(`The range address was ${range.address}.`);\r\n    });\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n"],"names":["___HTML_LOADER_IMPORT_0___","___HTML_LOADER_IMPORT_1___","___HTML_LOADER_IMPORT_2___","module","exports","url","options","String","__esModule","default","hash","maybeNeedQuotes","test","concat","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","m","n","getter","d","a","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","i","Error","replace","p","b","baseURI","self","href","Office","onReady","getElementById","onclick","keySave","style","display","saveButton","messageElement","console","log","addEventListener","displayChatMessage","message","chatOutput","messageNode","createElement","textContent","appendChild","scrollTop","scrollHeight","innerText","value","focus","event","userInput","Promise","resolve","reject","localStorage","getItem","data","prompt","temperature","model","max_tokens","xhr","XMLHttpRequest","open","setRequestHeader","onreadystatechange","readyState","DONE","status","response","JSON","parse","responseText","choices","text","trim","send","stringify","onerror","error","getChatGPTResponse","then","catch","openTab","evt","tabName","tabcontent","tablinks","getElementsByClassName","className","currentTarget","onload","querySelector","click","setItem","msgkeyElement","classList","add","innerHTML","remove","URL"],"sourceRoot":""}